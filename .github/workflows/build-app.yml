name: 스프링 부트 어플리케이션 빌드

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행

jobs:
  build:
    name: 어플리케이션 빌드
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # 코드 불러오기

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # corretto 배보판 (AWS 호환)
          java-version: '17'  # JDK 17

      - name: Grant execute permission to Gradle
        run: chmod +x monatium-darknet/gradlew

      - name: Build Application
        run: cd monatium-darknet && ./gradlew clean build -x test  # 테스트 제외하고 빌드

      # jar build/libs 경로에서 jar 파일을 찾아 (gitub actions 컨테이너 내부) 환경변수에 저장
      - name: Find JAR file
        id: find_jar
        run: echo "JAR_FILE=$(find monatium-darknet/build/libs -name '*-SNAPSHOT.jar' ! -name '*-plain.jar' | head -n 1)" >> $GITHUB_ENV

      # upload-artifact: 빌드 결과물을 저장하는 공식 액션
      # 하나의 job에서 빌드한 결과물을 다른 job에서 다운로드받아 사용 가능
      # actions/download-artifact에서 가져올 수 있음.
      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: ${{ env.JAR_FILE }}

  deploy:
    name: Deploy to Server
    needs: build  # build job이 끝난 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: .

      # 확인용 작업, 빌드 파일이 정상적으로 로드되었는지 확인하는 디버깅 단계. (종요)
      - name: Verify JAR file
        run: ls -lh *.jar || echo "No JAR file found!"

      # ssh 키 디코딩 및 설정
      - name: Decode and Setup SSH Key for SFTP
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_SSH_SK_B64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SFTP_PORT }} -H ${{ secrets.SFTP_HOST }} >> ~/.ssh/known_hosts

      # BUILD_TARGET에는 디렉터리 경로로 전달해야 함. (끝에 슬래시 붙일 것) 파일 경로처럼 전달하면 덮어씌워질 위험이 있음.
      - name: Deploy JAR to Server via SFTP
        run: |
          lftp -c "
            set sftp:connect-program 'ssh -a -x -i ~/.ssh/id_rsa -p ${{ secrets.SFTP_PORT }}';
            open -u ${{ secrets.SFTP_USER }}, sftp://${{ secrets.SFTP_HOST }};
            put -O ${{ secrets.BUILD_TARGET }} *.jar;
            bye
          "
